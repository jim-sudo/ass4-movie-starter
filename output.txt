Mon May 27 23:47:34 UTC 2024
Linux LinuxMachine 6.4.16-linuxkit #1 SMP PREEMPT Thu Nov 16 10:49:20 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
=====================================
Start testStoreFinal
Invalid movie type: Z
Invalid movie type: Z


=================Printing inventory==================

===== Comedy Movies =====

Title: Annie Hall
Director: Woody Allen
Release Year: 1977
Borrowed: 0
Available in Stock: 10

Title: Fargo
Director: Joel Coen
Release Year: 1996
Borrowed: 0
Available in Stock: 10

Title: National Lampoon's Animal House
Director: John Landis
Release Year: 1978
Borrowed: 0
Available in Stock: 10

Title: Pirates of the Caribbean
Director: Different Years
Release Year: 2000
Borrowed: 0
Available in Stock: 10

Title: Pirates of the Caribbean
Director: Gore Verbinski
Release Year: 2003
Borrowed: 0
Available in Stock: 10

Title: Sleepless in Seattle
Director: Nora Ephron
Release Year: 1993
Borrowed: 0
Available in Stock: 10

Title: When Harry Met Sally
Director: Rob Reiner
Release Year: 1989
Borrowed: 0
Available in Stock: 10

Title: You've Got Mail
Director: Nora Ephron
Release Year: 1998
Borrowed: 0
Available in Stock: 10


===== Drama Movies =====

Title: Good Morning Vietnam
Director: Barry Levinson
Release Year: 1988
Borrowed: 0
Available in Stock: 10

Title: Same Director Good Morning Vietnam
Director: Barry Levinson
Release Year: 1988
Borrowed: 0
Available in Stock: 10

Title: Unforgiven
Director: Clint Eastwood
Release Year: 1992
Borrowed: 0
Available in Stock: 10

Title: Good Will Hunting
Director: Gus Van Sant
Release Year: 2000
Borrowed: 0
Available in Stock: 10

Title: Silence of the Lambs
Director: Jonathan Demme
Release Year: 1991
Borrowed: 0
Available in Stock: 10

Title: Dogfight
Director: Nancy Savoca
Release Year: 1991
Borrowed: 0
Available in Stock: 10

Title: King of Hearts
Director: Phillippe De Broca
Release Year: 1967
Borrowed: 0
Available in Stock: 10

Title: Schindler's List
Director: Steven Spielberg
Release Year: 1993
Borrowed: 0
Available in Stock: 10


===== Classic Movies =====

Title: Holiday
Director: George Cukor
Major Actor: Cary Grant
Release Date: 9 1938
Borrowed: 0
Available in Stock: 10

Title: Holiday
Director: George Cukor
Major Actor: Katherine Hepburn
Release Date: 9 1938
Borrowed: 0
Available in Stock: 10

Title: Gone With the Wind
Director: Victor Fleming
Major Actor: Clark Gable
Release Date: 2 1939
Borrowed: 0
Available in Stock: 10

Title: Gone With the Wind
Director: Victor Fleming
Major Actor: Vivien Leigh
Release Date: 2 1939
Borrowed: 0
Available in Stock: 10

Title: The Wizard of Oz
Director: Victor Fleming
Major Actor: Judy Garland
Release Date: 7 1939
Borrowed: 0
Available in Stock: 10

Title: The Philadelphia Story
Director: George Cukor
Major Actor: Cary Grant
Release Date: 5 1940
Borrowed: 0
Available in Stock: 10

Title: The Philadelphia Story
Director: George Cukor
Major Actor: Katherine Hepburn
Release Date: 5 1940
Borrowed: 0
Available in Stock: 10

Title: The Maltese Falcon
Director: John Huston
Major Actor: Humphrey Bogart
Release Date: 10 1941
Borrowed: 0
Available in Stock: 10

Title: Casablanca
Director: Michael Curtiz
Major Actor: Humphrey Bogart
Release Date: 8 1942
Borrowed: 0
Available in Stock: 10

Title: Casablanca
Director: Michael Curtiz
Major Actor: Ingrid Bergman
Release Date: 8 1942
Borrowed: 0
Available in Stock: 10

Title: It's a Wonderful Life
Director: Frank Capra
Major Actor: Donna Reed
Release Date: 11 1946
Borrowed: 0
Available in Stock: 10

Title: It's a Wonderful Life
Director: Frank Capra
Major Actor: James Steward
Release Date: 11 1946
Borrowed: 0
Available in Stock: 10

Title: A Clockwork Orange
Director: Stanley Kubrick
Major Actor: Malcolm McDowell
Release Date: 2 1971
Borrowed: 0
Available in Stock: 10

Title: Harold and Maude
Director: Hal Ashby
Major Actor: Ruth Gordon
Release Date: 3 1971
Borrowed: 0
Available in Stock: 10


History for customer 1000:

** No transactions found **

History for customer 5000:

** No transactions found **

History for customer 8000:

** No transactions found **
Movie not found: D Barry Levinson, Good Morning Vietnam,
Error: Could not borrow movie: D Barry Levinson, Good Morning Vietnam,
Invalid movie type: Z
Error: Could not borrow movie: Z 2 1971 Malcolm McDowell
Movie not found: D Gus Van Sant, Good Will Hunting,
Error: Could not borrow movie: D Gus Van Sant, Good Will Hunting,
Movie not found: D Phillippe De Broca, King of Hearts,
Error: Could not borrow movie: D Phillippe De Broca, King of Hearts,
Movie not found: D Jonathan Demme, Silence of the Lambs,
Error: Could not borrow movie: D Jonathan Demme, Silence of the Lambs,
Invalid command: X
Movie not found: D Nancy Savoca, Dogfight,
Error: Could not borrow movie: D Nancy Savoca, Dogfight,
Movie not found: D Steven Spielberg, Schindler's List,
Error: Could not borrow movie: D Steven Spielberg, Schindler's List,
Invalid command: Z
Movie not found: D Nancy Savoca, Dogfight,
Error: Could not borrow movie: D Nancy Savoca, Dogfight,
Movie not found: D Clint Eastwood, Unforgiven,
Error: Could not borrow movie: D Clint Eastwood, Unforgiven,
Error: Customer ID 1234 not found.
Movie not found: F Bogus Title, 2001
Error: Could not borrow movie: F Bogus Title, 2001
Error: Could not borrow movie: C 3 1971 Ruth Gordon
Error: Could not borrow movie: C 3 1971 Ruth Gordon
Error: Could not borrow movie: C 3 1971 Ruth Gordon
Movie not found: D Steven Spielberg, Bogus Title,
Error: Could not borrow movie: D Steven Spielberg, Bogus Title,

=================Printing inventory==================

===== Comedy Movies =====

Title: Annie Hall
Director: Woody Allen
Release Year: 1977
Borrowed: 1
Available in Stock: 9

Title: Fargo
Director: Joel Coen
Release Year: 1996
Borrowed: 2
Available in Stock: 8

Title: National Lampoon's Animal House
Director: John Landis
Release Year: 1978
Borrowed: 1
Available in Stock: 9

Title: Pirates of the Caribbean
Director: Different Years
Release Year: 2000
Borrowed: 0
Available in Stock: 10

Title: Pirates of the Caribbean
Director: Gore Verbinski
Release Year: 2003
Borrowed: 0
Available in Stock: 10

Title: Sleepless in Seattle
Director: Nora Ephron
Release Year: 1993
Borrowed: 1
Available in Stock: 9

Title: When Harry Met Sally
Director: Rob Reiner
Release Year: 1989
Borrowed: 1
Available in Stock: 9

Title: You've Got Mail
Director: Nora Ephron
Release Year: 1998
Borrowed: 1
Available in Stock: 9


===== Drama Movies =====

Title: Good Morning Vietnam
Director: Barry Levinson
Release Year: 1988
Borrowed: 0
Available in Stock: 10

Title: Same Director Good Morning Vietnam
Director: Barry Levinson
Release Year: 1988
Borrowed: 0
Available in Stock: 10

Title: Unforgiven
Director: Clint Eastwood
Release Year: 1992
Borrowed: 0
Available in Stock: 10

Title: Good Will Hunting
Director: Gus Van Sant
Release Year: 2000
Borrowed: 0
Available in Stock: 10

Title: Silence of the Lambs
Director: Jonathan Demme
Release Year: 1991
Borrowed: 0
Available in Stock: 10

Title: Dogfight
Director: Nancy Savoca
Release Year: 1991
Borrowed: 0
Available in Stock: 10

Title: King of Hearts
Director: Phillippe De Broca
Release Year: 1967
Borrowed: 0
Available in Stock: 10

Title: Schindler's List
Director: Steven Spielberg
Release Year: 1993
Borrowed: 0
Available in Stock: 10


===== Classic Movies =====

Title: Holiday
Director: George Cukor
Major Actor: Cary Grant
Release Date: 9 1938
Borrowed: 1
Available in Stock: 9

Title: Holiday
Director: George Cukor
Major Actor: Katherine Hepburn
Release Date: 9 1938
Borrowed: 0
Available in Stock: 10

Title: Gone With the Wind
Director: Victor Fleming
Major Actor: Clark Gable
Release Date: 2 1939
Borrowed: 0
Available in Stock: 10

Title: Gone With the Wind
Director: Victor Fleming
Major Actor: Vivien Leigh
Release Date: 2 1939
Borrowed: 0
Available in Stock: 10

Title: The Wizard of Oz
Director: Victor Fleming
Major Actor: Judy Garland
Release Date: 7 1939
Borrowed: 0
Available in Stock: 10

Title: The Philadelphia Story
Director: George Cukor
Major Actor: Cary Grant
Release Date: 5 1940
Borrowed: 1
Available in Stock: 9

Title: The Philadelphia Story
Director: George Cukor
Major Actor: Katherine Hepburn
Release Date: 5 1940
Borrowed: 1
Available in Stock: 9

Title: The Maltese Falcon
Director: John Huston
Major Actor: Humphrey Bogart
Release Date: 10 1941
Borrowed: 1
Available in Stock: 9

Title: Casablanca
Director: Michael Curtiz
Major Actor: Humphrey Bogart
Release Date: 8 1942
Borrowed: 0
Available in Stock: 10

Title: Casablanca
Director: Michael Curtiz
Major Actor: Ingrid Bergman
Release Date: 8 1942
Borrowed: 0
Available in Stock: 10

Title: It's a Wonderful Life
Director: Frank Capra
Major Actor: Donna Reed
Release Date: 11 1946
Borrowed: 0
Available in Stock: 10

Title: It's a Wonderful Life
Director: Frank Capra
Major Actor: James Steward
Release Date: 11 1946
Borrowed: 0
Available in Stock: 10

Title: A Clockwork Orange
Director: Stanley Kubrick
Major Actor: Malcolm McDowell
Release Date: 2 1971
Borrowed: 1
Available in Stock: 9

Title: Harold and Maude
Director: Hal Ashby
Major Actor: Ruth Gordon
Release Date: 3 1971
Borrowed: 10
Available in Stock: 0


History for customer 1000:

Borrowed: F Fargo, 1996
Borrowed: C 3 1971 Ruth Gordon
Borrowed: C 5 1940 Cary Grant
Borrowed: C 5 1940 Katherine Hepburn

History for customer 1111:

Borrowed: C 9 1938 Cary Grant
Borrowed: C 10 1941 Humphrey Bogart
Borrowed: C 3 1971 Ruth Gordon
Borrowed: C 2 1971 Malcolm McDowell

History for customer 5000:

Borrowed: C 3 1971 Ruth Gordon
Returned: C 3 1971 Ruth Gordon
Borrowed: C 3 1971 Ruth Gordon
Returned: C 3 1971 Ruth Gordon
Borrowed: C 3 1971 Ruth Gordon
Returned: C 3 1971 Ruth Gordon
Borrowed: C 3 1971 Ruth Gordon

History for customer 8000:

Borrowed: F National Lampoon's Animal House, 1978
Borrowed: C 3 1971 Ruth Gordon
Borrowed: C 3 1971 Ruth Gordon
Returned: F You've Got Mail, 1998
Borrowed: F You've Got Mail, 1998

History for customer 8888:

Borrowed: C 3 1971 Ruth Gordon
Borrowed: F When Harry Met Sally, 1989
Borrowed: F Annie Hall, 1977
End testStoreFinal
=====================================
Done.
=====================================================
3. clang-tidy warnings are fixed
=====================================================
15790 warnings generated.
31580 warnings generated.
44309 warnings generated.
57043 warnings generated.
72833 warnings generated.
92786 warnings generated.
104240 warnings generated.
120044 warnings generated.
139956 warnings generated.
161810 warnings generated.
Suppressed 161810 warnings (161810 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./classic.cpp
Running clang-format on ./comedy.cpp
Running clang-format on ./customer.cpp
Running clang-format on ./customerHashTable.cpp
Running clang-format on ./drama.cpp
Running clang-format on ./inventory.cpp
Running clang-format on ./main.cpp
Running clang-format on ./movie.cpp
Running clang-format on ./store.cpp
Running clang-format on ./store_test.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==23298== Memcheck, a memory error detector
==23298== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==23298== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==23298== Command: ./a.out
==23298== Parent PID: 22989
==23298== 
==23298== 
==23298== HEAP SUMMARY:
==23298==     in use at exit: 4,788 bytes in 55 blocks
==23298==   total heap usage: 989 allocs, 934 frees, 150,941 bytes allocated
==23298== 
==23298== LEAK SUMMARY:
==23298==    definitely lost: 4,048 bytes in 30 blocks
==23298==    indirectly lost: 740 bytes in 25 blocks
==23298==      possibly lost: 0 bytes in 0 blocks
==23298==    still reachable: 0 bytes in 0 blocks
==23298==         suppressed: 0 bytes in 0 blocks
==23298== Rerun with --leak-check=full to see details of leaked memory
==23298== 
==23298== For lists of detected and suppressed errors, rerun with: -s
==23298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/classic.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Classic::Classic(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)         1       0 100.00%         7       0 100.00%         0       0   0.00%
Classic::operator<(Movie const&) const                                                                                                                                                                                                                                                                                                                                                        9       9   0.00%        20      20   0.00%         6       6   0.00%
Classic::operator==(Movie const&) const                                                                                                                                                                                                                                                                                                                                                       3       0 100.00%         5       0 100.00%         4       1  75.00%
Classic::Print(std::ostream&) const                                                                                                                                                                                                                                                                                                                                                           1       0 100.00%         9       0 100.00%         0       0   0.00%
Classic::ToString[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         4       0 100.00%         0       0   0.00%
Classic::getReleaseDate[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                    1       0 100.00%         1       0 100.00%         0       0   0.00%
Classic::setReleaseDate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                               1       1   0.00%         1       1   0.00%         0       0   0.00%
Classic::getMajorActor[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                     1       0 100.00%         1       0 100.00%         0       0   0.00%
Classic::setMajorActor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                                1       1   0.00%         1       1   0.00%         0       0   0.00%
ClassicFactory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                                                                                          1       0 100.00%        21       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        20      11  45.00%        70      22  68.57%        10       7  30.00%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/comedy.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Comedy::Comedy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)                                                                                                                                                                                      1       0 100.00%         8       0 100.00%         0       0   0.00%
Comedy::operator<(Movie const&) const                                                                                                                                                                                                                                                                                                                                                         4       4   0.00%         7       7   0.00%         2       2   0.00%
Comedy::operator==(Movie const&) const                                                                                                                                                                                                                                                                                                                                                        3       0 100.00%         4       0 100.00%         4       1  75.00%
Comedy::Print(std::ostream&) const                                                                                                                                                                                                                                                                                                                                                            1       0 100.00%         8       0 100.00%         0       0   0.00%
Comedy::ToString[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                           1       0 100.00%         4       0 100.00%         0       0   0.00%
Comedy::getReleaseYear() const                                                                                                                                                                                                                                                                                                                                                                1       0 100.00%         1       0 100.00%         0       0   0.00%
Comedy::setReleaseYear(int)                                                                                                                                                                                                                                                                                                                                                                   1       1   0.00%         1       1   0.00%         0       0   0.00%
Comedy::getDirector[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                        1       1   0.00%         1       1   0.00%         0       0   0.00%
Comedy::setDirector(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                                   1       1   0.00%         1       1   0.00%         0       0   0.00%
ComedyFactory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                                                                                           1       0 100.00%        15       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        15       7  53.33%        50      10  80.00%         6       3  50.00%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/customer.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Customer::Customer()                                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         1       0 100.00%         0       0   0.00%
Customer::Customer(int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)                                                                                                                                                                                                  1       0 100.00%         1       0 100.00%         0       0   0.00%
Customer::ID() const                                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         1       0 100.00%         0       0   0.00%
Customer::LastName[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                         1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::FirstName[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                        1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::SetID(int)                                                                                                                                                                                                                                                                                                                                                                          1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::SetLastName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)                                                                                                                                                                                                                                                                                        1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::SetFirstName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)                                                                                                                                                                                                                                                                                       1       1   0.00%         1       1   0.00%         0       0   0.00%
Customer::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)                                                                                                                                                                                                                                                                                                1       0 100.00%         4       0 100.00%         0       0   0.00%
Customer::History() const                                                                                                                                                                                                                                                                                                                                                                     7       0 100.00%         9       0 100.00%         4       0 100.00%
Customer::operator==(Customer const&) const                                                                                                                                                                                                                                                                                                                                                   5       5   0.00%         4       4   0.00%         6       6   0.00%
operator<<(std::ostream&, Customer const&)                                                                                                                                                                                                                                                                                                                                                    1       1   0.00%         5       5   0.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        22      11  50.00%        30      14  53.33%        10       6  40.00%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/customerHashTable.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CustomerHashTable::CustomerHashTable()                                                                                                                                                                                                                                                                                                                                                        4       0 100.00%         7       0 100.00%         2       0 100.00%
CustomerHashTable::~CustomerHashTable()                                                                                                                                                                                                                                                                                                                                                       1       0 100.00%         4       0 100.00%         0       0   0.00%
CustomerHashTable::hashFunction(int)                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         1       0 100.00%         0       0   0.00%
CustomerHashTable::probe(int, int)                                                                                                                                                                                                                                                                                                                                                            1       0 100.00%         3       0 100.00%         0       0   0.00%
CustomerHashTable::insert(Customer)                                                                                                                                                                                                                                                                                                                                                           7       1  85.71%        11       1  90.91%         4       1  75.00%
CustomerHashTable::search(int) const                                                                                                                                                                                                                                                                                                                                                          9       0 100.00%         9       0 100.00%         6       0 100.00%
CustomerHashTable::print() const                                                                                                                                                                                                                                                                                                                                                              6       6   0.00%         8       8   0.00%         4       4   0.00%
CustomerHashTable::remove(Customer)                                                                                                                                                                                                                                                                                                                                                           9       9   0.00%        10      10   0.00%         6       6   0.00%
CustomerHashTable::getCustomer(int)                                                                                                                                                                                                                                                                                                                                                           9       1  88.89%         9       1  88.89%         6       2  66.67%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        47      17  63.83%        62      20  67.74%        28      13  53.57%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/drama.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Drama::Drama(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int)                                                                                                                                                                                        1       0 100.00%         8       0 100.00%         0       0   0.00%
Drama::operator<(Movie const&) const                                                                                                                                                                                                                                                                                                                                                          4       4   0.00%         7       7   0.00%         2       2   0.00%
Drama::operator==(Movie const&) const                                                                                                                                                                                                                                                                                                                                                         3       0 100.00%         4       0 100.00%         4       1  75.00%
Drama::Print(std::ostream&) const                                                                                                                                                                                                                                                                                                                                                             1       0 100.00%         8       0 100.00%         0       0   0.00%
Drama::ToString[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                            1       0 100.00%         4       0 100.00%         0       0   0.00%
Drama::getReleaseYear() const                                                                                                                                                                                                                                                                                                                                                                 1       1   0.00%         1       1   0.00%         0       0   0.00%
Drama::setReleaseYear(int)                                                                                                                                                                                                                                                                                                                                                                    1       1   0.00%         1       1   0.00%         0       0   0.00%
Drama::getDirector[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                         1       0 100.00%         1       0 100.00%         0       0   0.00%
Drama::setDirector(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                                    1       1   0.00%         1       1   0.00%         0       0   0.00%
DramaFactory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                                                                                            1       0 100.00%        15       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        15       7  53.33%        50      10  80.00%         6       3  50.00%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/inventory.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Inventory::AddMovieHelper(Movie*, int)                                                                                                                                                                                                                                                                                                                                                        5       1  80.00%        10       3  70.00%         4       1  75.00%
Inventory::AddMovie(Movie const&, int)                                                                                                                                                                                                                                                                                                                                                        1       0 100.00%         4       0 100.00%         0       0   0.00%
Inventory::PrintInventory() const                                                                                                                                                                                                                                                                                                                                                            10       0 100.00%        73       0 100.00%        12       0 100.00%
Inventory::BorrowMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                               39       6  84.62%        75       8  89.33%        44       7  84.09%
Inventory::ReturnMovie(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                               30      13  56.67%        66      24  63.64%        38      16  57.89%
inventory.cpp:Inventory::PrintInventory() const::$_0::operator()(Movie*, Movie*) const                                                                                                                                                                                                                                                                                                        9       0 100.00%        11       0 100.00%         6       0 100.00%
inventory.cpp:Inventory::PrintInventory() const::$_1::operator()(Movie*, Movie*) const                                                                                                                                                                                                                                                                                                        9       0 100.00%        11       0 100.00%         6       0 100.00%
inventory.cpp:Inventory::PrintInventory() const::$_2::operator()(Movie*, Movie*) const                                                                                                                                                                                                                                                                                                       12       0 100.00%        22       0 100.00%         8       0 100.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                       115      20  82.61%       272      35  87.13%       118      24  79.66%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/main.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
main                                                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         5       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                         1       0 100.00%         5       0 100.00%         0       0   0.00%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/movie.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Movie::getFactories()                                                                                                                                                                                                                                                                                                                                                                         1       0 100.00%         4       0 100.00%         0       0   0.00%
Movie::RegisterType(char, MovieFactory*)                                                                                                                                                                                                                                                                                                                                                      1       0 100.00%         3       0 100.00%         0       0   0.00%
Movie::Create(char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                                   4       1  75.00%         7       1  85.71%         2       1  50.00%
Movie::getTitle[abi:cxx11]() const                                                                                                                                                                                                                                                                                                                                                            1       0 100.00%         1       0 100.00%         0       0   0.00%
Movie::setTitle(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                                                                                       1       1   0.00%         1       1   0.00%         0       0   0.00%
Movie::getStock() const                                                                                                                                                                                                                                                                                                                                                                       1       0 100.00%         1       0 100.00%         0       0   0.00%
Movie::setStock(int)                                                                                                                                                                                                                                                                                                                                                                          1       0 100.00%         1       0 100.00%         0       0   0.00%
Movie::getType() const                                                                                                                                                                                                                                                                                                                                                                        1       0 100.00%         1       0 100.00%         0       0   0.00%
Movie::Borrow()                                                                                                                                                                                                                                                                                                                                                                               4       4   0.00%         7       7   0.00%         2       2   0.00%
Movie::ReturnItem()                                                                                                                                                                                                                                                                                                                                                                           4       4   0.00%         7       7   0.00%         2       2   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        19      10  47.37%        33      16  51.52%         6       5  16.67%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/store.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Store::ReadCustomers(std::basic_ifstream<char, std::char_traits<char> >&)                                                                                                                                                                                                                                                                                                                     9       2  77.78%        20       6  70.00%         6       2  66.67%
Store::inventory()                                                                                                                                                                                                                                                                                                                                                                            1       0 100.00%         1       0 100.00%         0       0   0.00%
Store::Store()                                                                                                                                                                                                                                                                                                                                                                                1       0 100.00%         8       0 100.00%         0       0   0.00%
Store::~Store()                                                                                                                                                                                                                                                                                                                                                                               1       0 100.00%         5       0 100.00%         0       0   0.00%
Store::ReadMovies(std::basic_ifstream<char, std::char_traits<char> >&)                                                                                                                                                                                                                                                                                                                       21       3  85.71%        26       6  76.92%        14       3  78.57%
Store::PrintCustomers() const                                                                                                                                                                                                                                                                                                                                                                 1       1   0.00%         1       1   0.00%         0       0   0.00%
Store::ReadAndExecuteActions(std::basic_ifstream<char, std::char_traits<char> >&)                                                                                                                                                                                                                                                                                                            26       2  92.31%        63       4  93.65%        24       2  91.67%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                        60       8  86.67%       124      17  86.29%        44       7  84.09%

File '/home/cssuwbstudent/majidi2/hw4/ass4-movie-starter/store_test.cpp':
Name                                                                                                                                                                                                                                                                                                                                                                                    Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
testStore1()                                                                                                                                                                                                                                                                                                                                                                                  3       3   0.00%        17      17   0.00%         2       2   0.00%
testStore2()                                                                                                                                                                                                                                                                                                                                                                                  1       1   0.00%         6       6   0.00%         0       0   0.00%
testStore3()                                                                                                                                                                                                                                                                                                                                                                                  1       1   0.00%         6       6   0.00%         0       0   0.00%
testStore4()                                                                                                                                                                                                                                                                                                                                                                                  1       1   0.00%         9       9   0.00%         0       0   0.00%
testStoreFinal()                                                                                                                                                                                                                                                                                                                                                                              1       0 100.00%        13       0 100.00%         0       0   0.00%
testAll()                                                                                                                                                                                                                                                                                                                                                                                     1       0 100.00%         3       0 100.00%         0       0   0.00%
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                                                                                                         8       6  25.00%        54      38  29.63%         2       2   0.00%
=====================================================
The lines below were never executed
=====================================================
   14|      0|bool Classic::operator<(const Movie &other) const {
   15|      0|  const Classic &classic = static_cast<const Classic &>(other);
   16|      0|  if (release_date_ != classic.release_date_) {
   17|      0|    istringstream ssa(release_date_);
   18|      0|    istringstream ssb(classic.release_date_);
   19|      0|    int month_a;
   20|      0|    int year_a;
   21|      0|    int month_b;
   22|      0|    int year_b;
   23|      0|    ssa >> month_a >> year_a;
   24|      0|    ssb >> month_b >> year_b;
   25|      0|    if (year_a != year_b) {
   26|      0|      return year_a < year_b;
   27|      0|    }
   28|      0|    if (month_a != month_b) {
   29|      0|      return month_a < month_b;
   30|      0|    }
   31|      0|  }
   32|      0|  return major_actor_ < classic.major_actor_;
   33|      0|}
   58|      0|void Classic::setReleaseDate(const string &date) { release_date_ = date; }
   62|      0|void Classic::setMajorActor(const string &actor) { major_actor_ = actor; }
   15|      0|bool Comedy::operator<(const Movie &other) const {
   16|      0|  const auto comedy = static_cast<const Comedy &>(other);
   17|      0|  if (title_ != comedy.title_) {
   18|      0|    return title_ < comedy.title_;
   19|      0|  }
   20|      0|  return release_year_ < comedy.release_year_;
   21|      0|}
   44|      0|void Comedy::setReleaseYear(int year) { release_year_ = year; }
   46|      0|string Comedy::getDirector() const { return director_; }
   48|      0|void Comedy::setDirector(const string &director) { this->director_ = director; }
   10|      0|string Customer::LastName() const { return last_name_; }
   12|      0|string Customer::FirstName() const { return first_name_; }
   14|      0|void Customer::SetID(int id) { id_ = id; }
   16|      0|void Customer::SetLastName(string last_name) { last_name_ = last_name; }
   18|      0|void Customer::SetFirstName(string first_name) { first_name_ = first_name; }
   35|      0|bool Customer::operator==(const Customer &customer) const {
   36|      0|  return id_ == customer.id_ && last_name_ == customer.last_name_ &&
   37|      0|         first_name_ == customer.first_name_;
   38|      0|}
   40|      0|ostream &operator<<(ostream &os, const Customer &customer) {
   41|      0|  os << "Customer ID: " << customer.ID() << ", Name: " << customer.FirstName()
   42|      0|     << " " << customer.LastName();
   43|      0|  return os;
   44|      0|}
   31|      0|  return false; // table is full
   44|      0|void CustomerHashTable::print() const {
   45|      0|  for (int i = 0; i < TABLE_SIZE; i++) {
   46|      0|    if (!table[i].FirstName().empty()) {
   47|      0|      cout << "at index " << i << ": " << table[i] << endl;
   48|      0|    }
   49|      0|  }
   50|      0|  cout << endl;
   51|      0|}
   53|      0|bool CustomerHashTable::remove(Customer customer) {
   54|      0|  for (int i = 0; i < TABLE_SIZE; i++) {
   55|      0|    int idx = probe(customer.ID(), i);
   56|      0|    if (occupied[idx] && table[idx] == customer) {
   57|      0|      occupied[idx] = false;
   58|      0|      return true; // key removed
   59|      0|    }
   60|      0|  }
   61|      0|  return false; // key not found after full probing
   62|      0|}
   71|      0|  return nullptr; // Full cycle and not found
   15|      0|bool Drama::operator<(const Movie &other) const {
   16|      0|  const auto drama = static_cast<const Drama &>(other);
   17|      0|  if (director_ != drama.director_) {
   18|      0|    return director_ < drama.director_;
   19|      0|  }
   20|      0|  return title_ < drama.title_;
   21|      0|}
   42|      0|int Drama::getReleaseYear() const { return release_year_; }
   44|      0|void Drama::setReleaseYear(int year) { release_year_ = year; }
   48|      0|void Drama::setDirector(const string &director) { this->director_ = director; }
    6|      0|      m->setStock(m->getStock() + count);
    7|      0|      return;
    8|      0|    }
  125|      0|          return false; // No stock available
  142|      0|          if (drama->getStock() > 0) {
  143|      0|            drama->setStock(drama->getStock() - 1);
  144|      0|            return true; // Successfully borrowed
  145|      0|          }
  146|      0|          return false; // No stock available
  147|      0|        }
  174|      0|    break;
  207|      0|    break;
  209|      0|  case 'D': {
  210|      0|    std::string director;
  211|      0|    std::string title;
  212|      0|    iss.ignore(1, ' '); // Skip the space after type
  213|      0|    std::getline(iss, director, ',');
  214|      0|    std::getline(iss, title);
  216|      0|    for (auto &movie : movies_) {
  217|      0|      if (movie->getType() == 'D') {
  218|      0|        auto *drama = static_cast<Drama *>(movie);
  219|      0|        if (drama->getDirector() == director && drama->getTitle() == title) {
  220|      0|          drama->setStock(drama->getStock() + 1);
  221|      0|          return true; // Successfully returned
  222|      0|        }
  223|      0|      }
  224|      0|    }
  225|      0|    break;
  226|      0|  }
  246|      0|    break;
  248|      0|  default:
  249|      0|    std::cerr << "Invalid movie type: " << movie_type << std::endl;
  250|      0|    return false;
  253|      0|  std::cerr << "Movie not found: " << movie_info << std::endl;
  254|      0|  return false;
   17|      0|  throw std::invalid_argument("Invalid movie type");
   22|      0|void Movie::setTitle(const string &title) { this->title_ = title; }
   30|      0|bool Movie::Borrow() {
   31|      0|  if (current_stock_ > 0) {
   32|      0|    current_stock_--;
   33|      0|    return true;
   34|      0|  }
   35|      0|  return false;
   36|      0|}
   38|      0|bool Movie::ReturnItem() {
   39|      0|  if (current_stock_ < stock_) {
   40|      0|    current_stock_++;
   41|      0|    return true;
   42|      0|  }
   43|      0|  return false;
   44|      0|}
   14|      0|    cerr << "Error opening file!" << endl;
   15|      0|    return;
   16|      0|  }
   21|      0|      cerr << "Error reading line: " << line << endl;
   22|      0|      continue; // Handles lines that do not have exactly three words
   23|      0|    }
   49|      0|    std::cerr << "Could not open the file!" << std::endl;
   50|      0|    return;
   51|      0|  }
   56|      0|      continue;
   71|      0|      cerr << "Error parsing line: " << line << "\n" << e.what() << std::endl;
   72|      0|    }
   77|      0|void Store::PrintCustomers() const { customer_table_.print(); }
   90|      0|    }
  101|      0|        std::cerr << "Invalid customer ID: " << cusomter_id << std::endl;
  102|      0|      }
  104|      0|    }
   21|      0|void testStore1() {
   22|      0|  cout << "Start testStore1" << endl;
   25|      0|  string cfile = "testcommands-1.txt";
   26|      0|  stringstream out;
   27|      0|  ifstream fs(cfile);
   28|      0|  assert(fs.is_open());
   29|      0|  char command_type;
   30|      0|  string discard;
   31|      0|  while (fs >> command_type) {
   32|      0|    out << command_type;
   33|      0|    getline(fs, discard);
   34|      0|  }
   35|      0|  fs.close();
   36|      0|  string result = "IHHBRIBBIH";
   37|      0|  assert(out.str() == result);
   38|      0|  cout << "End testStore1" << endl;
   39|      0|}
   41|      0|void testStore2() {
   44|      0|  Store store;
   45|      0|  ifstream movie_file("data4movies.txt");
   46|      0|  store.ReadMovies(movie_file);
   47|      0|  store.inventory().PrintInventory();
   48|      0|}
   50|      0|void testStore3() {
   53|      0|  Store store;
   54|      0|  ifstream stream("data4customers.txt");
   55|      0|  store.ReadCustomers(stream);
   56|      0|  store.PrintCustomers();
   57|      0|}
   59|      0|void testStore4() {
   61|      0|  Store store;
   62|      0|  ifstream movie_file("data4movies.txt");
   63|      0|  store.ReadMovies(movie_file);
   64|      0|  ifstream customerfile("data4customers.txt");
   65|      0|  store.ReadCustomers(customerfile);
   66|      0|  ifstream commandfile("testCommandtext.txt");
   67|      0|  store.ReadAndExecuteActions(commandfile);
   68|      0|}
Mon May 27 23:47:52 UTC 2024
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
